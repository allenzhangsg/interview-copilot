name: Build, Package, and Release

on:
  push:
    tags:
      - "v*"

jobs:
  build:
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]

    steps:
      - uses: actions/checkout@v3

      - name: Use Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "20"

      - name: Install dependencies
        run: npm install && npm ci

      - name: Build and package
        run: npm run make

      - name: Upload artifacts
        uses: actions/upload-artifact@v3
        with:
          name: ${{ matrix.os }}-build
          path: out/make/**/*

  release:
    needs: build
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      # Set up Python for appdmg to be installed
      - name: Install Python 3.11.4
        uses: actions/setup-python@v4
        with:
          python-version: "3.11.4"

      - name: Download all artifacts
        uses: actions/download-artifact@v3
        with:
          path: artifacts

      - name: Display structure of downloaded files
        run: ls -R artifacts

      - name: Create Release
        id: create_release
        uses: softprops/action-gh-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref_name }}
          name: Release ${{ github.ref_name }}
          draft: false
          prerelease: false
          files: |
            artifacts/windows-latest-build/squirrel.windows/x64/*.exe
            artifacts/ubuntu-latest-build/deb/x64/*.deb
            artifacts/ubuntu-latest-build/rpm/x64/*.rpm
            artifacts/macos-latest-build/zip/darwin/arm64/*.zip
